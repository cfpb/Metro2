version: '3.4'

volumes:
  postgres_data:
  evaluators:

services:
  postgres:
    image: postgres:13-alpine
    user: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: cfpb
      POSTGRES_DB: metro2-data
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 10
    shm_size: '256mb'
  evaluator:
    image: metro2_evaluator:local
    build:
      context: ./jobs/parseEvaluate
      shm_size: '256mb'
    shm_size: '256mb'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./jobs/parseEvaluate:/src/parseEvaluate
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      PGDATABASE: metro2-data
      PGUSER: postgres
      PGPASSWORD: cfpb
      POSTGRES_USER: postgres
      PGHOST: postgres
      PGPORT: 5432
      METRO2ENV: local
  frontend:
    container_name: frontend
    build:
      context: ./front-end
    ports:
      - 127.0.0.1:3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    command: yarn dev
  django:
    image: django-m2:local
    build:
      context: ./django
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: django_application.settings.local
    ports:
      - 127.0.0.1:8000:8000
    stdin_open: true
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django:/src/metro2/django
