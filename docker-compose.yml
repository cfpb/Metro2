version: '3.4'

volumes:
  postgres_data:
  evaluators:

services:
  postgres:
    image: postgres:13-alpine
    user: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: cfpb
      POSTGRES_DB: metro2
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 10
  evaluator:
    image: metro2_evaluator:local
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./metro2:/src/metro2/
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      PGDATABASE: metro2
      PGUSER: postgres
      PGPASSWORD: cfpb
      POSTGRES_USER: postgres
      PGHOST: postgres
      PGPORT: 5432
      METRO2ENV: local
    command: ./setup.sh
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./front-end/Dockerfile
    ports:
      - 127.0.0.1:3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    command: yarn dev
